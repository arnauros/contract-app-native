rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Base rules
    match /{document=**} {
      allow read, write: if false;  // Disable wildcard access
    }

    // Helper functions
    function isOwner(contractId) {
      return request.auth != null && 
             get(/databases/$(database)/documents/contracts/$(contractId)).data.userId == request.auth.uid;
    }

    function hasCustomToken() {
      return request.auth != null && request.auth.token != null && request.auth.token.token != null;
    }

    function isSignedContract(contractId) {
      return get(/databases/$(database)/documents/contracts/$(contractId)).data.status == "signed";
    }

    // Users collection rules
    match /users/{userId} {
      // Allow users to read and write their own documents
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow admins to read all user documents (you can customize this as needed)
      // allow read: if request.auth != null && request.auth.token.admin == true;
    }

    // Contracts collection rules
    match /contracts/{contractId} {
      // Allow listing contracts
      allow list: if request.auth != null;
      
      // Allow reading specific contracts
      allow get: if 
        isOwner(contractId) || 
        isSignedContract(contractId) || 
        hasCustomToken();
      
      // Allow creating new contracts
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      
      // Allow updating own contracts
      allow update: if isOwner(contractId);
      
      // Allow deleting own contracts
      allow delete: if isOwner(contractId);
      
      // Allow access to signatures subcollection
      match /signatures/{signatureType} {
        allow read: if 
          isOwner(contractId) ||
          isSignedContract(contractId) ||
          hasCustomToken();
        
        allow write: if isOwner(contractId);
      }
      
      // Allow access to audits subcollection
      match /audits/{auditId} {
        allow read, write: if isOwner(contractId);
      }
      
      // Allow access to comments subcollection
      match /comments/{commentId} {
        // Allow contract owner to read/write all comments
        allow read, write: if isOwner(contractId);
        
        // Allow comment author to modify their own comments
        allow update, delete: if request.auth != null && 
          resource.data.userId == request.auth.uid;
        
        // Allow any authenticated user to create comments
        allow create: if request.auth != null;
        
        // Allow any authenticated user to read comments if they have access to the contract
        allow read: if request.auth != null || isSignedContract(contractId);
      }
    }
  }
} 